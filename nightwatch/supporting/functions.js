const selectors = require('./selectors')
const data = require('./data')

module.exports = {
    goodDataTest1: function (browser, test) {
        console.log("abcd",selectors.loanType[test.loanType])
        browser
            .waitForElementVisible(selectors.mainScreenTitle, 3000)
            .click(selectors.nextButton)
            .waitForElementVisible(selectors.loanType.loanTypeQuestion, 2000)
            .click(selectors.loanType.dropDown + ' ' + selectors.loanType[test.loanType])//.click(`${selectors.loanType.dropDown} ${selectors.loanType.homePurchase}`)
            .click(selectors.propertyType.dropDown + ' ' + selectors.propertyType[test.propertyType])
            .click(selectors.nextButton)
            .waitForElementVisible(selectors.cityQuestion, 2000)
            .setValue(selectors.cityName, test.cityName)
            .click(selectors.nextButton)
            .waitForElementVisible(selectors.propertyPurpose.propertyPurposeQuestion, 2000)
            .click(selectors.propertyPurpose[test.propertyPurpose])
            .waitForElementVisible(selectors.newHome.newHomeQuestion, 2000)
            .click(selectors.newHome[test.newHome])
            .waitForElementVisible(selectors.realEstateAgent.realEstateAgentQuestion, 2000)
            .click(selectors.realEstateAgent[test.realEstateAgent])
            .waitForElementVisible(selectors.estimatePurchasePriceQuestion, 2000)
            .setValue(selectors.estimatePurchasePrice, test.estimatePurchasePrice)
            .setValue(selectors.downPayment, test.downPayment)
            .click(selectors.nextButton)
            .waitForElementVisible(selectors.creditScore.creditScoreQuestion, 2000)
            .click(selectors.creditScore[test.creditScore])
            .waitForElementVisible(selectors.bankrutcyHistory.bankruptcyHistoryQuestion, 2000)
            .click(selectors.bankrutcyHistory[test.bankruptcyHistory])
            .waitForElementVisible(selectors.addressInput.addressQuestion, 2000)
            .setValue(selectors.addressInput.lineOne, test.addressLine1)
            .setValue(selectors.addressInput.lineTwo, test.addressLine2)
            .setValue(selectors.addressInput.lineThree, test.addressLine3)
            .click(selectors.nextButton)
            .waitForElementVisible(selectors.contactInfo.contactInfoQuestion, 2000)
            .setValue(selectors.contactInfo.firstname, test.firstName)
            .setValue(selectors.contactInfo.lastName, test.lastName)
            .setValue(selectors.contactInfo.email, test.email)
            .click(selectors.nextButton)
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Name:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Email:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('What type of loan will you be needing?:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('What type of property are you purchasing?:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('In what city will the property be located?:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Type of property the loan is applied to:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Have you already found your new home?:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Currently working with a real estate agent?:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Estimated purchase price of the home:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Down payment:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Credit score:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Bankruptcy history:')
        browser.expect.element(selectors.overView.overViewTemplate).text.to.contain('Current Address:')
        browser.expect.element(selectors.overView.nameOutput).text.to.equal(test.nameOutput)
        browser.expect.element(selectors.overView.emailOutput).text.to.equal(test.emailOutput)
        browser.expect.element(selectors.overView.loanTypeOutput).text.to.equal(test.loanTypeOutput)
        browser.pause(10000)
        browser.expect.element(selectors.overView.propertyTypeOutput).text.to.equal(test.propertyTypeOutput)
        browser.pause(10000)
        browser.expect.element(selectors.overView.cityOutput).text.to.equal(test.cityOutput)
        browser.expect.element(selectors.overView.propertyPurposeOutput).text.to.equal(test.propertyPurposeOutput)
        browser.expect.element(selectors.overView.newHomeOutput).text.to.equal(test.newHomeOutput)
        browser.expect.element(selectors.overView.realEstateAgentOutput).text.to.equal(test.realEstateAgentOutput)
        browser.expect.element(selectors.overView.estimatePurchasePriceOutput).text.to.equal(test.estimatePurchasePriceOutput)
        browser.expect.element(selectors.overView.downPaymentOutput).text.to.equal(test.downPaymentOutput)
        browser.expect.element(selectors.overView.creditScoreOutput).text.to.equal(test.creditScoreOutput)
        browser.expect.element(selectors.overView.bankruptcyHistoryOutput).text.to.equal(test.bankruptcyHistoryOutput)
        browser.expect.element(selectors.overView.currentAddressOutput.lineOne).text.to.equal(test.currentAddressOutput.lineOne)
        browser.expect.element(selectors.overView.currentAddressOutput.lineTwo).text.to.equal(test.currentAddressOutput.lineTwo)
        browser.expect.element(selectors.overView.currentAddressOutput.lineThree).text.to.equal(test.currentAddressOutput.lineThree)
        browser.click(selectors.overView.send)
        .expect.element(selectors.finalScreen.finalScreenpage).text.to.contain('Thank you for choosing Home Loan Wizard, a representative will be in touch with you shortly to talk about further steps.')
        browser.click(selectors.finalScreen.home)

    }
}


